services:
  laravel:
    build:
      context: './DoctorON_api/vendor/laravel/sail/runtimes/8.4'
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: 'sail-8.4/app'
    container_name: doctoron-api
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '${APP_PORT:-80}:80'
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
      XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
      IGNITION_LOCAL_SITES_PATH: '${PWD}'
    volumes:
      - './DoctorON_api:/var/www/html'
      - './.env:/var/www/html/.env'
    networks:
      - doctoron-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  mysql:
    image: 'mysql/mysql-server:8.0'
    container_name: doctoron-db
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - doctoron-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 3

  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'redis_data:/data'
    networks:
      - doctoron-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  react:
    build:
      context: ./material_kit
      dockerfile: Dockerfile
    container_name: material-kit
    ports:
      - "3000:3000"
    volumes:
      - './material_kit:/app'
      - '/app/node_modules'
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://laravel:80
      - NODE_ENV=development
    networks:
      - doctoron-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  doctoron-network:
    driver: bridge